---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 1h
  timeout: 15m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    toolbox:
      enabled: false
    route:
      dashboard:
        parentRefs:
          - name: reverse-proxy
            namespace: envoy-gateway-system
        host:
          name: 'rook.${DOMAIN}'
          path: /
          pathType: PathPrefix
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module
      cleanupPolicy:
        wipeDevicesFromOtherClusters: true
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://vmsingle-stack.observability.svc.cluster.local:8428
      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: true
        useAllDevices: false
        #devicePathFilter: /dev/disk/by-id/nvme-Micron_7450_MTFDKBA800TFS_.*
        deviceFilter: vdb
        config:
          osdsPerDevice: "1"
      resources:
        mgr:
          limits: &mgr-hw
            cpu: 500m
            memory: 700Mi
          requests: *mgr-hw
        mon:
          limits: &mon-hw
            cpu: 500m
            memory: 640Mi
          requests: *mon-hw
        osd:
          limits: &osd-hw
            cpu: 500m
            memory: 1600Mi
          requests: *osd-hw
        prepareosd:
          limits:
            cpu: 1000m
            memory: 400Mi
          requests:
            cpu: 50m
            memory: 200Mi
        mgr-sidecar:
          limits:
            cpu: 128m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 40Mi
        crashcollector:
          limits:
            cpu: 100m
            memory: 64M
          requests:
            cpu: 15m
            memory: 32M
        logcollector:
          limits:
            cpu: 50m
            memory: 32Mi
          requests:
            cpu: 5m
            memory: 16Mi
        cleanup:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 100Mi
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions:
            - discard
          parameters:
            compression_mode: aggressive
            compression_algorithm: zstd
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: false
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems: []
#      - name: &cephFileSystemName ceph-filesystem
#        spec:
#          metadataPool:
#            replicated:
#              size: 3
#          dataPools:
#            - failureDomain: host
#              replicated:
#                size: 3
#              name: data0
#          metadataServer:
#            activeCount: 1
#            activeStandby: true
#            priorityClassName: system-cluster-critical
#            placement:
#              topologySpreadConstraints:
#                - maxSkew: 1
#                  topologyKey: kubernetes.io/hostname
#                  whenUnsatisfiable: DoNotSchedule
#                  labelSelector:
#                    matchLabels:
#                      app.kubernetes.io/name: ceph-mds
#                      app.kubernetes.io/part-of: *cephFileSystemName
#            resources:
#              requests:
#                cpu: 100m
#                memory: 1Gi
#              limits:
#                memory: 4Gi
#        storageClass:
#          enabled: true
#          isDefault: false
#          name: ceph-filesystem
#          pool: data0
#          reclaimPolicy: Delete
#          allowVolumeExpansion: true
#          volumeBindingMode: Immediate
#          parameters:
#            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
#            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
#            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
#            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
#            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
#            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
#            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: false
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: []