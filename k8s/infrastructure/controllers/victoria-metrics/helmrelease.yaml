# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/refs/heads/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics
  namespace: observability
spec:
  interval: 30m
  timeout: 10m
  chartRef:
    kind: OCIRepository
    name: victoria-metrics-k8s-stack
    namespace: observability
  maxHistory: 3
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  releaseName: stack
  values:
    fullnameOverride: stack

    defaultDashboards:
      defaultTimezone: ist
      grafanaOperator:
        enabled: true

    defaultDatasources:
      grafanaOperator:
        enabled: true

    grafana:
      enabled: false
      forceDeployDatasource: true

    vmsingle:
      enabled: true
      spec:
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
          seccompProfile: { type: RuntimeDefault }

    vmagent:
      spec:
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 500Mi

    kubeControllerManager:
      endpoints: # required for k3s because kube services are not run as pods
        - 10.0.10.2
      vmScrape:
        spec:
          endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              port: http-metrics
              scheme: https
              tlsConfig:
                caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                serverName: kubernetes
                insecureSkipVerify: true

    kubeEtcd:
      enabled: false

    kubeScheduler:
      endpoints: # required for k3s because kube services are not run as pods
        - 10.0.10.2
      vmScrape:
        spec:
          endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              port: http-metrics
              scheme: https
              tlsConfig:
                caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecureSkipVerify: true

    alertmanager:
      enabled: true
      config:
        route:
          receiver: "discord-infra"
          group_by: ["alertgroup", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 4h
          routes:
            - receiver: 'discord-info'
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"

        receivers:
          - name: "discord-infra"
            discord_configs:
              - webhook_url: 'replacedfromvalues'
                username: '${DOMAIN}'
                title: |-
                  [{{ .Status | toUpper -}}
                   {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
                  ]
                  {{ if ne .Status "firing" -}}
                  :white_check_mark: 
                  {{- else if eq .CommonLabels.severity "critical" -}}
                  :x:
                  {{- else if eq .CommonLabels.severity "warning" -}}
                  :warning:
                  {{- else if eq .CommonLabels.severity "info" -}}
                  :information_source:
                  {{- else -}}
                  :question:
                  {{- end }}
                message: |
                  {{ range .Alerts }}
                  {{- if .Annotations.summary }}
                  Summary:  {{ .Annotations.summary }}
                  {{- end }}
                  {{- if .Annotations.description }}
                  Description: {{ .Annotations.description }}
                  {{- end }}
                  {{- end }}
          - name: "null"
          - name: "discord-info"
            discord_configs:
              - webhook_url: 'replacedfromvalues'
                username: '${DOMAIN}'
                title: |-
                  [{{ .Status | toUpper -}}
                   {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
                  ]
                  {{ if ne .Status "firing" -}}
                  :white_check_mark: 
                  {{- else if eq .CommonLabels.severity "critical" -}}
                  :x:
                  {{- else if eq .CommonLabels.severity "warning" -}}
                  :warning:
                  {{- else if eq .CommonLabels.severity "info" -}}
                  :information_source:
                  {{- else -}}
                  :question:
                  {{- end }}
                message: |
                  {{ range .Alerts }}
                  {{- if .Annotations.summary }}
                  Summary:  {{ .Annotations.summary }}
                  {{- end }}
                  {{- if .Annotations.description }}
                  Description: {{ .Annotations.description }}
                  {{- end }}
                  {{- end }}
  valuesFrom:
    - kind: Secret
      name: discord-webhook
      valuesKey: token
      targetPath: alertmanager.config.receivers[0].discord_configs[0].webhook_url
    - kind: Secret
      name: discord-webhook
      valuesKey: info
      targetPath: alertmanager.config.receivers[2].discord_configs[0].webhook_url

